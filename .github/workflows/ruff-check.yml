name: "Ruff Code Quality Check"

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - "**.py"
      - "pyproject.toml"
      - "ruff.toml"
      - ".github/workflows/ruff-check.yml"

jobs:
  ruff-lint:
    name: "Ruff Linter Check"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-lint-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --extras dev

      - name: Run Ruff Linter
        run: |
          poetry run ruff check --output-format=github .

  ruff-format:
    name: "Ruff Format Check"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-format-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --extras dev

      # Keep an eye on https://github.com/astral-sh/ruff/issues/10430 to support problem-matchers and/or
      # inline annotations for Actions in the future
      - name: Run Ruff Format Check
        run: |
          poetry run ruff format --check --diff .
